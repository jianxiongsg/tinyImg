"use strict";
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
var fs = __importStar(require("fs"));
var wlutil = __importStar(require("wlutil"));
var MD5Storage = /** @class */ (function () {
    /**
     * @param folder 存储路径
     */
    function MD5Storage(folder) {
        this.folder = folder;
    }
    /**
     * 获得path文件的存储路径
     * @param path
     */
    MD5Storage.prototype.getPath = function (path) {
        var md5 = wlutil.md5(path);
        return this.folder + "/" + md5.substr(0, 2) + "/" + md5;
    };
    /**
     * 用path的md5值，保存path指定文件到存储里
     * @param path
     */
    MD5Storage.prototype.save = function (path) {
        this.saveOther(path, path);
    };
    /**
     * 用path的md5值，保存file指定文件到存储里
     * @param path
     * @param file
     */
    MD5Storage.prototype.saveOther = function (path, file) {
        var md5Path = this.getPath(path);
        wlutil.createFolders(md5Path, true);
        fs.writeFileSync(md5Path, fs.readFileSync(file));
    };
    MD5Storage.prototype.getValidPath = function (path) {
        var md5path = this.getPath(path);
        if (fs.existsSync(md5path)) {
            return md5path;
        }
    };
    /**
     * 读取path文件对应的md5文件，没有则返回undefined
     * @param path
     */
    MD5Storage.prototype.load = function (path) {
        var md5path = this.getPath(path);
        if (!fs.existsSync(md5path)) {
            return;
        }
        return fs.readFileSync(md5path);
    };
    return MD5Storage;
}());
exports.MD5Storage = MD5Storage;
