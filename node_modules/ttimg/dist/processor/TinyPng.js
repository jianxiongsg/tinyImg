"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var tinify_1 = __importDefault(require("tinify"));
var v1_1 = __importDefault(require("uuid/v1"));
var path_1 = __importDefault(require("path"));
var fs_1 = __importDefault(require("fs"));
var md5storage_1 = require("md5storage");
var TinyPng = /** @class */ (function () {
    function TinyPng(keys, folder) {
        if (folder === void 0) { folder = "tinypng"; }
        this.keys = [];
        this.curKeyIndex = 0;
        this.storage = new md5storage_1.MD5Storage(folder);
        this.keys = keys;
        tinify_1.default.key = this.keys[0];
        this.waitQueue = [];
    }
    TinyPng.prototype.changeKey = function () {
        this.curKeyIndex = (this.curKeyIndex + 1) % this.keys.length;
        tinify_1.default.key = this.keys[this.curKeyIndex];
    };
    TinyPng.prototype._processFile = function (file, toFile, retryNum) {
        return __awaiter(this, void 0, void 0, function () {
            var _this = this;
            return __generator(this, function (_a) {
                return [2 /*return*/, new Promise(function (resolve, reject) {
                        tinify_1.default.fromFile(file).toFile(toFile, function (err) {
                            if (err) {
                                if (err instanceof tinify_1.default.AccountError) {
                                    if (retryNum >= _this.keys.length) {
                                        reject("accounterr");
                                    }
                                    else {
                                        resolve(false);
                                    }
                                }
                                else if (err instanceof tinify_1.default.ClientError) {
                                    reject("imgerr");
                                }
                                else if (err instanceof tinify_1.default.ServerError) {
                                    reject("tmperr");
                                }
                                else if (err instanceof tinify_1.default.ConnectionError) {
                                    reject("neterr");
                                }
                                else {
                                    reject("othererr");
                                }
                            }
                            else {
                                resolve(true);
                            }
                        });
                    })];
            });
        });
    };
    TinyPng.prototype.getFileName = function (file) {
        var newpath = path_1.default.resolve(path_1.default.dirname(file), v1_1.default());
        while (fs_1.default.existsSync(newpath)) {
            newpath = path_1.default.resolve(path_1.default.dirname(file), v1_1.default());
        }
        return newpath;
    };
    TinyPng.prototype.processFile = function (file, toFile) {
        return __awaiter(this, void 0, void 0, function () {
            var md5path, tempFile, retryNum, e_1;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        md5path = this.storage.getValidPath(file);
                        if (md5path) {
                            if (toFile) {
                                fs_1.default.writeFileSync(toFile, fs_1.default.readFileSync(md5path));
                            }
                            return [2 /*return*/, md5path];
                        }
                        tempFile = toFile || this.getFileName(file);
                        retryNum = 0;
                        _a.label = 1;
                    case 1:
                        _a.trys.push([1, 5, , 6]);
                        _a.label = 2;
                    case 2: return [4 /*yield*/, this._processFile(file, tempFile, retryNum)];
                    case 3:
                        if (!!(_a.sent())) return [3 /*break*/, 4];
                        this.changeKey();
                        retryNum++;
                        return [3 /*break*/, 2];
                    case 4: return [3 /*break*/, 6];
                    case 5:
                        e_1 = _a.sent();
                        throw e_1;
                    case 6:
                        this.storage.saveOther(file, tempFile);
                        return [2 /*return*/, tempFile];
                }
            });
        });
    };
    TinyPng.prototype.next = function () {
        var func = this.waitQueue.shift();
        func();
    };
    TinyPng.prototype.add = function (file) {
        return __awaiter(this, void 0, void 0, function () {
            var _this = this;
            return __generator(this, function (_a) {
                return [2 /*return*/, new Promise(function (resolve) {
                        var isFirst = false;
                        if (_this.waitQueue.length === 0) {
                            isFirst = true;
                        }
                        _this.waitQueue.push(function () { return __awaiter(_this, void 0, void 0, function () {
                            var _a;
                            return __generator(this, function (_b) {
                                switch (_b.label) {
                                    case 0:
                                        _a = resolve;
                                        return [4 /*yield*/, this.processFile(file)];
                                    case 1:
                                        _a.apply(void 0, [_b.sent()]);
                                        return [2 /*return*/];
                                }
                            });
                        }); });
                        if (isFirst) {
                            _this.next();
                        }
                    })];
            });
        });
    };
    TinyPng.prototype.process = function (files, params) {
        return __awaiter(this, void 0, void 0, function () {
            var info, _a, _b, _i, fieldname, file, e_2;
            return __generator(this, function (_c) {
                switch (_c.label) {
                    case 0:
                        info = {
                            err: "",
                            files: {},
                        };
                        _a = [];
                        for (_b in files)
                            _a.push(_b);
                        _i = 0;
                        _c.label = 1;
                    case 1:
                        if (!(_i < _a.length)) return [3 /*break*/, 6];
                        fieldname = _a[_i];
                        _c.label = 2;
                    case 2:
                        _c.trys.push([2, 4, , 5]);
                        return [4 /*yield*/, this.add(files[fieldname])];
                    case 3:
                        file = _c.sent();
                        if (file) {
                            info.files[fieldname] = file;
                        }
                        return [3 /*break*/, 5];
                    case 4:
                        e_2 = _c.sent();
                        info.err += "error " + fieldname + " " + e_2;
                        return [3 /*break*/, 5];
                    case 5:
                        _i++;
                        return [3 /*break*/, 1];
                    case 6: return [2 /*return*/, info];
                }
            });
        });
    };
    return TinyPng;
}());
exports.TinyPng = TinyPng;
